---

import fetchMeta from 'fetch-meta-tags';

interface Props {
	url: string;
  date: string;
  author: string;
}

const {url, date, author} = Astro.props;
const result = await fetchMeta(url)
---

<a href={result.url} class="feature-card__link" target="_blank" rel="noopener noreferrer">
    <div class="feature-card__content">
        <div class="feature-card__header">
            <h3 class="feature-card__title">
                {result.title}
            </h3>
        </div>
        
        {result.description && (
            <p class="feature-card__description">
                {result.description}
            </p>
        )}
        
        <div class="feature-card__meta">
            <div class="feature-card__meta-info">
                {author && (
                    <span class="feature-card__author">
                        <img class="feature-card__avatar" src={`https://github.com/${author}.png`} alt={author} />
                        @{author}
                    </span>
                )}
                {date && (
                    <span class="feature-card__date">{date}</span>
                )}
            </div>
            <div class="feature-card__arrow">
                â†’
            </div>
        </div>
    </div>
</a>

<style>
    .feature-card__link {
        display: block !important;
        margin: 0.4em 0 !important;
        text-decoration: none !important;
        color: inherit !important;
        border: 1px solid lightgray !important;
        border-radius: 0.5rem !important;
        padding: 1rem !important;
        transition: all 0.3s ease !important;
        background-color: var(--theme-bg) !important;
    }

    .feature-card__link:hover {
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        border-color: lightgray;
        transform: translateY(-2px);
    }

    .feature-card__content {
        display: flex !important;
        flex-direction: column !important;
        gap: 0.25rem !important;
    }

    .feature-card__title {
        font-family: var(--theme-font-family-serif) !important;
        font-weight: 600 !important;
        font-size: var(--font-size-base) !important;
        color: var(--theme-on-bg) !important;
        margin: 0 !important;
        margin-bottom: 0 !important;
        line-height: 1.4 !important;
        display: -webkit-box !important;
        -webkit-line-clamp: 2 !important;
        -webkit-box-orient: vertical !important;
        overflow: hidden !important;
    }

    .feature-card__link:hover .feature-card__title {
        color: var(--theme-primary);
    }

    .feature-card__description {
        font-size: var(--font-size-sm) !important;
        color: var(--theme-on-surface) !important;
        margin: 0 !important;
        margin-bottom: 0 !important;
        line-height: 1.5 !important;
        display: -webkit-box !important;
        -webkit-line-clamp: 3 !important;
        -webkit-box-orient: vertical !important;
        overflow: hidden !important;
    }

    .feature-card__meta {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-top: 0.5rem;
    }

    .feature-card__meta-info {
        display: flex;
        align-items: center;
        gap: 1rem;
        font-size: var(--font-size-sm);
    }

    .feature-card__author {
        color: var(--theme-on-surface);
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .feature-card__avatar {
        width: 30px;
        height: 30px;
        border-radius: 50%;
        object-fit: cover;
    }

    .feature-card__date {
        color: var(--theme-on-surface);
        opacity: 0.7;
    }

    .feature-card__arrow {
        color: var(--theme-on-surface);
        opacity: 0.6;
        transition: color 0.2s ease;
    }

    .feature-card__link:hover .feature-card__arrow {
        color: var(--theme-primary);
    }
</style>